{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule,Routes } from '@angular/router'\n\nimport { HomeComponent } from './components/home/home.component'\n\nimport { UsersComponent } from './components/users/users.component'\n\nconst routes: Routes = [\n  {path:'',component: HomeComponent},\n  {path:'users',component: UsersComponent}\n];\n\n@NgModule({\n  exports:[RouterModule],\n\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n})\nexport class AppRoutingModule { }\n","module.exports = \" \"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { HomeComponent } from './components/home/home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    NavbarComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h1>Welcome</h1>\\n<p>This is a website for collecting user information\\n</p>\\n<button class=\\\"btn btn-dark\\\" routerLink=\\\"/users\\\" >Users Section</button>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-dark mb-4\\\">\\n  <div class=\\\"container\\\">\\n    <a routerLink='/' class=\\\"navbar-brand\\\">Angular App</a>\\n    <div>\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\"[routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\"[routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n            <a routerLink=\\\"users\\\" class=\\\"nav-link\\\">Users</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".big-text{\\r\\n  text-transform: uppercase;\\r\\n}\"","module.exports = \"<button (click)=\\\"showUserForm = !showUserForm\\\" class=\\\"btn btn-dark mb-3\\\">\\n  Add User\\n</button>\\n<div class=\\\"card card-body mb-3\\\" *ngIf=\\\"showUserForm\\\">\\n  <h2>\\n    Add User\\n  </h2>\\n  <form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(userForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        First Name\\n      </label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"user.firstName\\\" [ngClass]=\\\"{'is-invalid':userFirstName.errors && userFirstName.touched }\\\"\\n        class=\\\"form-control\\\" name=\\\"firstName\\\" #userFirstName=\\\"ngModel\\\" required minlength=\\\"2\\\">\\n      <div [hidden]=\\\"!userFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n        First name required\\n      </div>\\n\\n      <div [hidden]=\\\"!userFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        Must be at least 2 characters\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        Last Name\\n      </label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"user.lastName\\\" [ngClass]=\\\"{'is-invalid':userLastName.errors && userLastName.touched }\\\" class=\\\"form-control\\\"\\n        name=\\\"lastName\\\" #userLastName=\\\"ngModel\\\" required minlength=\\\"2\\\">\\n      <div [hidden]=\\\"!userLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n        Last name required\\n      </div>\\n\\n      <div [hidden]=\\\"!userLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        Must be at least 2 characters\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        email\\n      </label>\\n\\n      <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" [ngClass]=\\\"{'is-invalid':userEmail.errors && userEmail.touched }\\\" class=\\\"form-control\\\"\\n        name=\\\"email\\\" #userEmail=\\\"ngModel\\\" required pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\">\\n      <div [hidden]=\\\"!userEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n        Email is not valid\\n      </div>\\n\\n      <div [hidden]=\\\"!userEmail.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n        Must be at least 2 characters\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        Balance\\n      </label>\\n      <input type=\\\"number\\\" [(ngModel)]=\\\"user.balance\\\" [ngClass]=\\\"{'is-invalid':userBalance.errors && userBalance.touched }\\\" class=\\\"form-control\\\"\\n        name=\\\"balance\\\" #userBalance=\\\"ngModel\\\" required type='number'>\\n\\n      <div [hidden]=\\\"!userBalance.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n        Please give me a number\\n      </div>\\n    </div>\\n\\n    <button [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-block mb-3\\\" [ngClass]=\\\"userForm.form.valid?currentClasses:''\\\">Add New User </button>\\n  </form>\\n</div>\\n<ul class=\\\"list-unstyled\\\" *ngIf=\\\"loaded && users?.length > 0;else noUsers\\\">\\n  <li class=\\\"card card-body mb-2\\\" *ngFor=\\\"let user of users; let i = index \\\"   [class.bg-light]=\\\"user.isActive\\\"\\n    [style.border-color]=\\\"user.isActive ? 'black':'' \\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <img class=\\\"img-fluid\\\" [src]=\\\"user.image\\\" alt=\\\"\\\" (click)=\\\"toggleHide(user)\\\" (click)=\\\"user.updateMode = false\\\">\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <h3 [ngStyle]=\\\"user.hide?currentStyles:''\\\">{{ user.firstName }} {{ user.lastName}}\\n          <small>\\n            <button (click)=\\\"toggleHide(user)\\\" (click)=\\\"user.updateMode = false\\\" class=\\\"btn btn-dark btn-xl\\\">\\n              <i [ngClass]=\\\"user.hide ? 'fa fa-plus': 'fa fa-minus'\\\"></i>\\n            </button>\\n          </small>\\n        </h3>\\n        <ul class=\\\"list-group\\\" *ngIf=\\\"!user.hide && !user.updateMode\\\">\\n          <li class=\\\"list-group-item\\\">email: {{ user.email }}</li>\\n          <li class=\\\"list-group-item\\\">\\n            balance: {{user.balance | currency:\\\"CAD\\\":\\\"symbol\\\"}}\\n          </li>\\n          <!-- <li class=\\\"list-group-item\\\">\\n            Joined: {{user.registered | date:\\\"fullDate\\\"}}\\n          </li> -->\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"user.updateMode=!user.updateMode\\\">\\n            Update\\n          </button>\\n\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"removeUser(i)\\\">\\n            Remove\\n          </button>\\n\\n        </ul>\\n\\n        <ul class=\\\"list-group\\\" *ngIf=\\\"!user.hide && user.updateMode\\\">\\n\\n          <div class=\\\"card card-body mb-3\\\">\\n            <h2>\\n              Update Here\\n            </h2>\\n            <form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(userForm)\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  First Name\\n                </label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"user.firstName\\\" [ngClass]=\\\"{'is-invalid':userFirstName.errors && userFirstName.touched }\\\"\\n                  class=\\\"form-control\\\" name=\\\"firstName\\\" #userFirstName=\\\"ngModel\\\" required minlength=\\\"2\\\">\\n                <div [hidden]=\\\"!userFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  First name required\\n                </div>\\n\\n                <div [hidden]=\\\"!userFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Last Name\\n                </label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"user.lastName\\\" [ngClass]=\\\"{'is-invalid':userLastName.errors && userLastName.touched }\\\" class=\\\"form-control\\\"\\n                  name=\\\"lastName\\\" #userLastName=\\\"ngModel\\\" required minlength=\\\"2\\\">\\n                <div [hidden]=\\\"!userLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  Last name required\\n                </div>\\n\\n                <div [hidden]=\\\"!userLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  email\\n                </label>\\n\\n                <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" [ngClass]=\\\"{'is-invalid':userEmail.errors && userEmail.touched }\\\" class=\\\"form-control\\\"\\n                  name=\\\"email\\\" #userEmail=\\\"ngModel\\\" required pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\">\\n                <div [hidden]=\\\"!userEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                  Email is not valid\\n                </div>\\n\\n                <div [hidden]=\\\"!userEmail.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  Balance\\n                </label>\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"user.balance\\\" [ngClass]=\\\"{'is-invalid':userBalance.errors && userBalance.touched }\\\" class=\\\"form-control\\\"\\n                  name=\\\"balance\\\" #userBalance=\\\"ngModel\\\">\\n                <div [hidden]=\\\"!userBalance.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  Balance required\\n                </div>\\n              </div>\\n\\n              <button [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-block mb-3\\\" [ngClass]=\\\"userForm.form.valid?currentClasses:''\\\"\\n               (click)=\\\"user.updateMode=!user.updateMode\\\"\\n                (click)=\\\"toggleHide(user)\\\">Finish </button>\\n            </form>\\n          </div>\\n\\n        </ul>\\n      </div>\\n    </div>\\n  </li>\\n</ul>\\n\\n<!-- <ng-template #noUsers><h4>No Users Found</h4></ng-template> -->\\n<h4 *ngIf=\\\"loaded && users?.length == 0\\\">No Users Found</h4>\\n<h4 *ngIf=\\\"!loaded\\\">loading Users...</h4>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService} from '../../services/data.service';\nimport { User } from '../../model/User'\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n  user: User = {\n    firstName: '',\n    lastName: '',\n    email: ''\n  };\n  showExtended: boolean = true;\n  loaded: boolean = false;\n  enableAdd: boolean = true;\n  showUserForm: boolean = false;\n  @ViewChild('userForm') form: any;\n  currentClasses = {};\n  currentStyles = {};\n  myRdms: number[];\n  myNum: number;\n  data:any;\n\n  constructor(private dataService: DataService ) { }\n\n  ngOnInit() {\n    this.dataService.getData().subscribe(data =>{\n      console.log(data);\n    })\n\n    this.users = this.dataService.getUsers();\n\n    setTimeout(() => {\n    \n      this.loaded = true;\n    }, 1000);\n\n\n    //this.showExtended = true;\n\n    // this.addUser({\n    //   firstName:'Diana',\n    //   lastName:'Lee',\n    //   age:28,\n    //   address:{\n    //     street:'76 Edward',\n    //     city:'Oakville',\n    //     state:'ON'\n    //   },\n    //   image: 'https://picsum.photos/200/200/?random+3',\n    //   isActive:true,\n    //   hide:true,\n    //   balance:200\n    // }); \n    this.setCurrentClasses();\n    this.setCurrentStyles();\n  }\n\n  // addUser() {\n  //   this.user.isActive = true;\n  //   this.user.registered = new Date();\n  //   this.user.image =\n  //   'https://picsum.photos/200/200/?random';\n  //   this.users.unshift(this.user);\n\n  //   this.user = {\n  //     firstName: '',\n  //     lastName: '',\n  //     email: ''\n  //   };\n\n  // }\n  removeUser(index: number) {\n    this.users.splice(index, 1);\n  }\n  updateUser(index) {\n    this.users[index].updateMode = !this.users[index].updateMode;\n    console.log(this.users[index].updateMode);\n  }\n  setCurrentClasses() {\n    this.currentClasses = {\n      'btn-success': this.enableAdd,\n      //'big-text': this.showExtended\n    }\n  }\n  setCurrentStyles() {\n    this.currentStyles = {\n      'padding-top': this.user.hide? '0' : '60px',\n      'font-size': this.user.hide? '0' : '40px'\n    }\n  }\n  fireEvent(e) {\n    console.log(e.target.value);\n    console.log(e.type);\n  }\n  toggleHide(user: User) {\n    user.hide = !user.hide;\n  }\n\n  onSubmit({ value, valid }: { value: User, valid: boolean }) {\n    if (!valid) {\n      console.log('Form is not valid');\n    } else {\n      this.myNum=this.randomInt(this.myRdms);\n      value.image =\n    'https://picsum.photos/200/200/?random'+this.myNum;\n      value.isActive = true;\n      value.registered = new Date();\n      value.hide = true;\n\n      this.dataService.addUser(value);\n\n      this.form.reset();\n    }\n\n  }\n\n  \n  randomInt(arr=[]) {\n    var myNum=-1;\n    while (myNum==-1) {\n      var myNum = Math.floor(Math.random() * 1000000000) + 0;\n      if (arr.indexOf(arr) > -1) continue;\n    }\n    return myNum;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import { of } from 'rxjs'；\n\nimport { User } from '../model/User'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  users: User[];\n  data: Observable<any>;\n\n\n  user: User = {\n    firstName: '',\n    lastName: '',\n    email: ''\n  };\n  showExtended: boolean = true;\n  loaded: boolean = false;\n  enableAdd: boolean = true;\n  showUserForm: boolean = false;\n\n  currentClasses = {};\n  currentStyles = {};\n  myRdms: number[];\n  myNum: number;\n\n  constructor() { \n    this.myRdms=this.randomIntFromInterval();\n    console.log('here');\n    \n    this.users = [\n      {\n        firstName: 'Mattew',\n        lastName: 'Bred',\n        email: 'mattew@email.com',\n        image: 'https://picsum.photos/200/200/?random'+this.myRdms[1],\n        isActive: true,\n        hide: true,\n        updateMode: false,\n        balance: 22,\n        registered: new Date('01/02/2018 08:30:00')\n      },\n      {\n        firstName: 'Eric',\n        lastName: 'Pavinton',\n        email: 'eric@email.com',\n        image: 'https://picsum.photos/200/200/?random'+this.myRdms[2],\n        isActive: false,\n        hide: true,\n        updateMode: false,\n        balance: 18,\n        registered: new Date('03/04/2017 08:30:00')\n      },\n      {\n        firstName: 'Jane',\n        lastName: 'Field',\n        email: 'jane@email.com',\n        image:\n          'https://picsum.photos/200/200/?random'+this.myRdms[3],\n        isActive: true,\n        hide: true,\n        updateMode: false,\n        balance: 19,\n        registered: new Date('02/03/2017 08:30:00')\n      }\n    ];\n   }\n\n   getData(){\n     this.data = new Observable(observer => {\n       setTimeout(()=>{\n         observer.next(1);\n       },1000);\n\n       setTimeout(()=>{\n        observer.next(2);\n      },2000);\n\n      setTimeout(()=>{\n        observer.next(3);\n      },3000);\n\n      setTimeout(()=>{\n        observer.next(4);\n      },4000);\n     });\n\n     return this.data;\n   }\n\n   getUsers(): User[]{\n     console.log('Fetching users from service...')\n     return this.users;\n   }\n\n   addUser(user: User){\n     this.users.unshift(user);\n\n   }\n\n   randomIntFromInterval() {\n    var arr = [];\n    while (arr.length < 8) {\n      var randomnumber = Math.floor(Math.random() * 1000000000) + 0;\n      if (arr.indexOf(randomnumber) > -1) continue;\n      arr[arr.length] = randomnumber;\n    }\n    return arr;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}